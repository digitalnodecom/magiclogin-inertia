<?php

namespace App\Http\Controllers;

use App\Models\User;
use Illuminate\Foundation\Application;
use Illuminate\Http\Client\ConnectionException;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Routing\Redirector;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Http;
use Inertia\Inertia;
use Inertia\Response;

class MagicAuthController extends Controller
{

    /**
     * @param string|null $email
     * @param string|null $phone
     * @return void
     */
     public function register_or_login_user(string $email = null, string $phone = null): void
     {
        if ($email) {
            $user = User::query()->createOrFirst(["email" => $email]);
        } else {
            $user = User::query()->createOrFirst(["phone" => $phone]);
        }
        Auth::login($user, true);

     }

    /**
     *  Handling the redirect form magic.mk and logging in or registering the user,
     *  or if it's not a redirect from magic, just render the login page
     *
     * @return Application|Response|Redirector|RedirectResponse
     * @throws ConnectionException
     */
    public function index(): Application|Response|Redirector|RedirectResponse
    {
        $xapikey = env('MAGIC_LOGIN_API_KEY');

        //If its redirect form magic login
        if (request()->query("token")) {

            $response = Http::withHeaders([
                'X-API-Key' => $xapikey,
            ])->post('https://magic.mk/api/request_validated/', [
                'request_id' => request()->query("request_id"),
            ]);

            if ($response->successful()) {
                $email = $response->json()["email"];
                $phone = $response->json()["phone"];
                $this->register_or_login_user($email, $phone);

                if (Route::has('dashboard')) {
                    return redirect()->route('dashboard');
                } else {
                    return redirect('/');
                }
            }
        }

        return Inertia::render('Auth/MagicAuth', ["magic_project_key" => env('MAGIC_LOGIN_PROJECT_KEY')]);
    }

}
